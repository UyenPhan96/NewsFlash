@model Web_News.Areas.Admin.ViewModels.NewsViewModel

@{
    ViewBag.Title = "Thêm bài viết";
}

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-header bg-gradient-dark text-white">
            <h4 class="mb-0">Thêm bài viết mới</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()

                <!-- Hình ảnh -->
                <div class="form-group" style="display: flex; flex-direction: column; align-items: center;">

                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" id="selectedImage" class="form-control" readonly placeholder="Chọn hình ảnh..." />
                        <div class="input-group-append">
                            <button class="btn btn-outline-danger btn-icon-text" type="button" onclick="openImageModal()">Tải ảnh lên</button>
                        </div>
                    </div>

                    <br />

                    <div style="text-align: center;">
                        <strong>Hình ảnh bài viết </strong>
                        <img id="selectedImagePreview" src="/js/default.jpg" alt="Hình ảnh thay thế" class="img-thumbnail mt-3" style="max-width: 300px; display: block;" />

                    </div>

                    <br />

                    @Html.HiddenFor(model => model.Image)
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>


                <!-- Tiêu đề -->
                <div class="form-group">
                    <br />
                    <div style="text-align: center;">
                        <strong>Tiêu đề bài viết </strong>
                    </div>
                    <br />
                    <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề bài viết" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <!-- Danh mục -->
                <div class="form-group">
                    <br />
                    <div style="text-align: center;">
                        <strong>Danh mục bài viết </strong>
                    </div>
                    <br />
                    <div class="row">
                        @foreach (var category in Model.Categories)
                        {
                            <div class="col-md-3 col-sm-6">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="SelectedCategories" value="@category.CategoryId" />
                                    <label class="form-check-label">@category.NameCategory</label>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Nội dung -->
                <div class="form-group">
                    <br />
                    <div style="text-align: center;">
                        <strong>Nội dung bài viết </strong>
                    </div>
                    <br />
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = 5, placeholder = "Nhập nội dung bài viết" })
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <!-- Nút hành động -->
                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-gradient-dark btn-icon-text">Thêm bài viết</button>
                    <a href="@Url.Action("Index", "News")" class="btn btn-outline-secondary">Hủy</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Select or Upload Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="imageGallery" class="row">
                    <!-- Images will be loaded here -->
                </div>
                <hr />
                <div>
                    <label for="uploadImage">Upload a new image:</label>
                    <input type="file" id="uploadImage" />
                    <button type="button" class="btn btn-primary mt-2" onclick="uploadNewImage()">Upload</button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        CKEDITOR.replace("Content");

        function openImageModal() {
            // Fetch the list of images and display them in the modal
            fetch('@Url.Action("GetImages", "Image")')
                .then(response => response.json())
                .then(images => {
                    const imageGallery = document.getElementById('imageGallery');
                    imageGallery.innerHTML = ''; // Clear previous images

                    images.forEach(image => {
                        const imageElement = document.createElement('div');
                        imageElement.className = 'col-md-3';
                        imageElement.innerHTML = `
                            <img src="/images/${image}" alt="${image}" class="img-thumbnail" style="width: 100%; height: auto;" />
                            <button class="btn btn-primary btn-sm mt-2" onclick="selectImage('${image}')">Chọn</button>
                            <button class="btn btn-danger btn-sm mt-2" onclick="deleteImage('${image}')">Xóa</button>
                        `;
                        imageGallery.appendChild(imageElement);
                    });

                    $('#imageModal').modal('show'); // Show the modal
                });
        }

        function selectImage(imageName) {
            const selectedImageInput = document.getElementById('selectedImage');
            const selectedImagePreview = document.getElementById('selectedImagePreview');

            selectedImageInput.value = imageName;
            document.querySelector('input[name="Image"]').value = imageName;

            // Show the image preview
            selectedImagePreview.src = `/images/${imageName}`;
            selectedImagePreview.style.display = 'block';

            $('#imageModal').modal('hide');
        }

        function uploadNewImage() {
            const fileInput = document.getElementById('uploadImage');
            if (fileInput.files.length === 0) {
                alert('Vui lòng chọn một hình ảnh để tải lên.');
                return;
            }

            const formData = new FormData();
            formData.append('imageFile', fileInput.files[0]);

            fetch('@Url.Action("UploadImage", "Image")', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        // Refresh image gallery
                        openImageModal();
                        fileInput.value = ''; // Clear the file input
                    } else {
                        alert('Tải lên thất bại: ' + (result.message || 'Lỗi không xác định.'));
                    }
                })
                .catch(error => {
                    console.error('Lỗi:', error);
                });
        }

        function deleteImage(imageName) {
            if (!imageName) {
                alert('Tên ảnh không hợp lệ.');
                return;
            }

            fetch('@Url.Action("DeleteImage", "Image")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ ImageName: imageName })
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        // Refresh image gallery
                        openImageModal();
                    } else {
                        alert('Xóa thất bại: ' + (result.message || 'Lỗi không xác định.'));
                    }
                })
                .catch(error => {
                    console.error('Lỗi:', error);
                });
        }
    </script>
}
